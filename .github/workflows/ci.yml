name: Java CI with Maven and Docker

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and test with Maven
        run: mvn -B clean verify

      - name: Upload Surefire test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports/

      - name: Upload JaCoCo coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-coverage-report
          path: target/site/jacoco/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: target/site/jacoco/jacoco.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  build_docker_image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    # This job will only run if build_and_test job is successful.
    # Given current JaCoCo check failures, this means it won't run until coverage is met.
    # This is acceptable as we typically want to build images from validated states.
    needs: build_and_test 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Optional: Login to Docker Hub (or other registry)
      # - name: Login to Docker Hub
      #   if: github.event_name != 'pull_request' # Don't push on PRs from forks unless secure
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false # Set to true to push to a registry
          tags: storage-app:latest # Example tag, can be more dynamic

      # Example of using the image digest later if needed
      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }} 